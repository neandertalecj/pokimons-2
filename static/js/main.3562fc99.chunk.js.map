{"version":3,"sources":["Hooks/useFetch.js","components/Spinner.jsx","components/Preloader.jsx","components/Badge.jsx","components/PokemonItem.jsx","components/InfoBlock.jsx","components/FilterTypes.jsx","components/PokemonList.jsx","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","data","undefined","error","status","setStatus","fetchNow","fetch","then","res","json","catch","useEffect","Spinner","color","className","fill","viewBox","xmlns","d","Preloader","screenHeight","Badge","name","onFilter","grass","poison","fire","flying","water","bug","electric","ground","fairy","onClick","PokemonItem","pokData","onImageClick","imgStatus","setImgStaus","id","type","src","alt","onLoad","onError","map","tabNames","attack","defense","hp","spAttack","spDefense","speed","weight","totalMoves","InfoBlock","info","onClose","tab","console","log","arrTypes","pad","str","max","toString","length","reduce","acc","el","replace","Object","entries","FilterTypes","typesOnPage","PokemonList","onLoadMore","infoPok","setInfoPok","handleImageClick","filter","pok","item","i","ar","indexOf","Container","appData","setAppData","Promise","all","results","checkStatus","parseJSON","combineData","response","ok","resolve","reject","Error","statusText","pokN","objectPokemon","idD","matched","pokD","match","slice","types","stats","base_stat","moves","next","targetType","sorted","sort","a","b","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3562fc99.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useFetch = (url, options) => {\n\n  const [status, setStatus] = useState({\n    loading: false,\n    data: undefined,\n    error: undefined\n  })\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true })\n\n    fetch(url, options)\n      .then(res => res.json())\n      .then(res => {\n        setStatus({ loading: false, data: res })\n      })\n      .catch(error => {\n        setStatus({ loading: false, error})\n      })\n  }\n\n  useEffect(() => {\n    if(url) {\n      fetchNow(url, options)\n    }\n  }, [])\n\n  return { \n    ...status, \n    fetchNow\n  }\n} \n\nexport default useFetch","const Spinner = ({ color, className }) => (\n  <svg\n    fill={color}\n    viewBox=\"0 0 1792 1792\"\n    className={`${className} flex-no-shrink animate-spin`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M1760 896q0 176-68.5 336t-184 275.5-275.5 184-336 68.5-336-68.5-275.5-184-184-275.5-68.5-336q0-213 97-398.5t265-305.5 374-151v228q-221 45-366.5 221t-145.5 406q0 130 51 248.5t136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5q0-230-145.5-406t-366.5-221v-228q206 31 374 151t265 305.5 97 398.5z\" />\n  </svg>\n);\n\nexport default Spinner","import Spinner from './Spinner'\n\nconst Preloader = ({ color, className, screenHeight }) => {\n  return (\n    <div className={`${screenHeight} flex justify-center items-center space-x-3 md:space-x-6 flex-wrap`}>\n       {/* <Spinner color=\"#1d4ed8\" className=\"h-20\" /> */}\n       <Spinner color={color} className={className} />\n\n    </div>\n  )\n}\n\nexport default Preloader","const Badge = ({ name, className, onFilter }) => {\n  const bgCollor = {\n    grass: 'from-green-300 to-green-100 border-green-500',\n    poison: 'from-purple-400 to-purple-100 border-purple-500',\n    fire: 'from-red-400 to-red-100 border-red-500',\n    flying: 'from-blue-400 to-blue-100 border-blue-500',\n    water: 'from-blue-500 to-blue-300 border-blue-700',\n    bug : 'from-gray-400 to-gray-100 border-gray-500',\n    electric: 'from-yellow-400 to-yellow-100 border-yellow-500',\n    ground: 'from-yellow-600 to-yellow-300 border-yellow-700',\n    fairy: 'from-red-200 to-red-50 border-red-400',\n  }\n  return (\n    <div\n      className={`border-2 bg-gradient-to-t ${bgCollor[name]} rounded ${className} text-center`}\n      onClick={onFilter}\n    >\n      {name}\n    </div>\n  )\n}\n\nexport default Badge","import { useState } from \"react\"\nimport Preloader from './Preloader'\nimport Badge from './Badge'\n\nconst PokemonItem = ({ pokData, onImageClick }) => {\n  const [imgStatus, setImgStaus] = useState('loading')\n\n  const { name, id, type } = pokData\n\n  const handleImageLoaded = () => {\n    setImgStaus('loaded')\n  }\n\n  const handleImageErrored = () => {\n    setImgStaus('failed to load')\n  }\n \n  return (\n    <li className=\"sm:w-1/2 md:w-1/3 mb-8\">\n      <div className=\"border border-black px-5 pb-16 mx-4\">\n        <img\n          className=\"my-4 cursor-pointer\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n          alt={name}\n          onLoad={handleImageLoaded}\n          onError={handleImageErrored}\n          onClick={() => onImageClick(id)}\n        />\n\n        {imgStatus === 'failed to load' && imgStatus}\n        {imgStatus === 'loading' && <Preloader color=\"#1d4ed8\" className=\"h-10\" screenHeight={\"\"} />}\n\n        <div className=\"capitalize font-medium text-center\">\n          {name}\n        </div>\n        <div className=\"flex space-x-2\">\n          {pokData && type.map(name => (   \n            <Badge key={name} name={name} className=\"w-1/2\" />\n          ))}\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default PokemonItem","const tabNames = {\n  attack: 'Attack',\n  defense: 'Defense',\n  hp: 'HP',\n  spAttack: 'SP Attack',\n  spDefense: 'SP Defense',\n  speed: 'Speed',\n  weight: 'Weight',\n  totalMoves: 'Tottal moves',\n}\n\nconst InfoBlock = ({info, onClose}) => {\n  const { name, id, type, tab } = info[0]\n  console.log('POKEMON_INFO', info )\n  // Adds zeros before the digit - in our case it an id of pokemon. There should be a total of three digits\n  const pad = (str, max) => {\n    console.log('STR', str, max)\n    str = str.toString()\n    return str.length < max ? pad(\"0\" + str, max) : str\n  }\n\n  // Forms a types string from an array of objects\n  const strTypes = arrTypes => {\n    return arrTypes.reduce((acc, el) => {\n      return `${acc}, ${el}`.replace(/^, /, '')\n    }, '')\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-400 lg:bg-transparent\">\n      <div className=\"text-center border border-black p-5 lg:max-w-xs relative bg-white\">\n        <div\n          className=\"cursor-pointer visible lg:invisible absolute right-5 bg-gray-300 py-1 px-3 rounded-full hover:bg-gray-400\"\n          onClick={onClose}\n        >x</div>\n        <div className=\"max-w-xs mx-auto\">\n          <img\n            className=\"inline-block\"\n            src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n            alt={name}\n          />\n        </div>\n        \n\n        <div className=\"text-center font-medium text-1xl capitalize py-2\">\n          {name} #{pad(id, 3)}\n        </div>\n\n        <div className=\"max-w-xs m-auto\">\n        <table className=\"table-fixed border-collapse border border-black w-full\">\n          <tbody>\n            <tr>\n              <td className=\"w-3/4 border border-black\">Type</td>\n              <td className=\"w-1/4 border border-black\">\n                {type && strTypes(type)}\n              </td>\n            </tr>\n            {tab && Object.entries(tab).map(el => (\n              <tr key={el[0]}>\n                <td className=\"border border-black\">{tabNames[el[0]]}</td>\n                <td className=\"border border-black\">{el[1]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoBlock","import Badge from './Badge'\n\nconst FilterTypes = ({ typesOnPage, onFilter }) => {\n\n  return (\n    <div className=\"pb-52\">\n      <h2 className=\"font-medium text-2xl\">\n        Sorting page elements by a choosen type\n      </h2>\n      <div className=\"flex flex-wrap space-x-2\">\n        {typesOnPage && typesOnPage.map(name => (   \n          <Badge\n            className=\"w-32 my-2 cursor-pointer\"\n            key={name} \n            name={name}\n            onFilter={() => onFilter(name)}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default FilterTypes","import { useState } from 'react'\nimport Preloader from '../components/Preloader'\nimport PokemonItem from './PokemonItem'\nimport InfoBlock from './InfoBlock'\nimport FilterTypes from './FilterTypes'\n\nconst PokemonList = ({ data, loading, error, onLoadMore, onFilter }) => {\n  const [infoPok, setInfoPok] = useState(null)\n\n  const handleImageClick = id => setInfoPok(id)\n\n  const handleCloseInfo = () => setInfoPok(null)\n\n  const getPokimonInfo = id =>  data.filter(pok => pok.id === id)\n  \n// Getting unic Types on page\n  const getTypesOnPage = () => {\n    const arrTypes = data.reduce((acc, el) =>  [...acc, ...el.type], [])\n    const unic = arrTypes.filter((item, i, ar) => ar.indexOf(item) === i)\n\n    return unic\n  }\n\n  if(loading) return <Preloader color=\"#1d4ed8\" className=\"h-20\" screenHeight={\"h-screen\"} />\n\n  if(error) {\n    console.log('error', error)\n    return null\n  }\n\n  return (\n    <div>\n      <div className=\"container mx-auto flex relative\">\n        <div className=\"w-full lg:w-3/5\">\n          <ul className=\"flex flex-col sm:flex-row flex-wrap\">\n            {data && data.map((pokData) => (\n              <PokemonItem\n                key={pokData.id}\n                pokData={pokData}\n                onImageClick={handleImageClick}\n              />\n            ))}\n          </ul>\n          <button\n            className=\"w-full py-2 rounded bg-blue-400 text-white font-medium\"\n            onClick={onLoadMore}\n          >\n            Load More\n          </button>\n        </div>\n\n        <div className=\"lg:w-2/5\">\n          <div className=\"fixed left-0 lg:left-2/3 right-0 top-0 lg:top-32 bg-white\">\n            {infoPok && <InfoBlock info={getPokimonInfo(infoPok)} onClose={handleCloseInfo} />}\n          </div>\n        </div>\n      </div>\n      <div className=\"container mx-auto pt-20\">\n        <div>\n          <FilterTypes\n            typesOnPage={getTypesOnPage()}\n            onFilter={onFilter}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonList","import { useEffect, useState } from 'react'\nimport useFetch from '../Hooks/useFetch'\nimport PokemonList from './PokemonList'\n\nconst Container = () => {\n  const { data, loading, error, fetchNow } = useFetch(`https://pokeapi.co/api/v2/pokemon?limit=12`)\n  const [appData, setAppData] = useState([])\n\n  useEffect(() => {\n    data && Promise.all(data.results.map(({url}) =>\n      fetch(url)\n        .then(checkStatus)  // check the response of our APIs\n        .then(parseJSON)    // parse it to Json\n        .catch(error => console.log('There was a problem!', error))\n        ))\n        .then(pokData => {\n          data && setAppData(combineData(data, pokData))\n        })\n  }, [data])\n\n  const checkStatus = response => {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n\n  const parseJSON = response => response.json()\n\n  //Extraction of types from a complex structure\n  const getTypes = objectPokemon => {\n    const typesArrey = objectPokemon.types.map(({ type: { name }})=> {\n      return name\n    })\n    return typesArrey\n  }\n  \n\n// Preparing data for the app by combining results from multiple requests\n  const combineData = (data, pokData) => {\n    const pokCombined = data.results.map(pokN => {\n      let idD = null\n      const matched = pokData.filter((pokD) => {\n        // extracting id from url\n        idD = pokN.url.match(/\\d+/g).slice(-1)[0]\n\n        return +pokD.id === +idD\n      })\n\n      return {\n        url: pokN.url,\n        name: pokN.name,\n        id: idD,\n        type: getTypes(matched[0]), \n        tab: {\n          attack: matched[0].stats[1].base_stat,\n          defense: matched[0].stats[2].base_stat,\n          hp: matched[0].stats[0].base_stat,\n          spAttack: matched[0].stats[3].base_stat,\n          spDefense: matched[0].stats[4].base_stat,\n          speed: matched[0].stats[5].base_stat,\n          weight: matched[0].weight,\n          totalMoves: matched[0].moves.length\n        }\n      }\n    })//map's end\n\n    return pokCombined\n  }\n\n  const handleLoadMore = () => fetchNow(data.next)\n\n  // Sorting appData (page data) by type\n  const handleFilter = targetType => {\n    const sorted = appData.sort((a, b) => {\n      let mark = -1\n      a.type.includes(targetType) ? mark = -1 : mark = 1\n      return mark\n    })\n\n    setAppData([...sorted])\n  }\n  \n  return (\n    <div>\n      <PokemonList\n        data={appData}\n        loading={loading}\n        error={error}\n        onLoadMore={handleLoadMore}\n        onFilter={handleFilter}\n      />\n    </div>\n  )\n}\n\nexport default Container","import Container from './components/Container'\n\nfunction App() {\n  \n  return (\n    <div>\n      <div className=\"text-center py-5\">\n        <div className=\"capitalize text-center border border-black inline-block py-2 px-36 text-3xl font-medium\">\n          pokedex\n        </div>\n      </div>\n      <Container />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}